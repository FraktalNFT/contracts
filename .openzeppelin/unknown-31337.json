{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0xf2295a3896c71d29dcb3bbd2942a2c251a94dcf4817418bd9cf19bc98fee4f35",
    "deployTransaction": {
      "hash": "0xf2295a3896c71d29dcb3bbd2942a2c251a94dcf4817418bd9cf19bc98fee4f35",
      "type": 2,
      "accessList": [],
      "blockHash": "0xc8b8e846b7aa1eea9405fb753e1bba574b370dce8d62b863b65ebb7bb3de5a65",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x6a218399"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x98a83d32"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x02049158f16466d27a92bb4220f0b8f721e9490e139de632dd6d60a939782473",
      "s": "0x7c0f23162980124bc2700aabd38fb49de1880961f4e1a36afb7e8dd95558efce",
      "v": 1,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x73a61c2e5196136596171b0b993b90daf733ea71b2a7828665d6bcbeb888f8a7",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xe7cfc1c0702e79b3fb9f6fe50b111c4f0a02f7881b00c449d150f4e11ac85e26",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x9701f3772d38767317bd8fab23535618c5c9566cfee079e5b57a46677ddde657",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x3c496cbf370d70c4e9b3c23a6bd20819767c7343fe0f3a380c7f95a1b4b10bc7",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x7be06fa95730dfac41ad9379a46a8e9c9731058ee704fce44e5ca92ba59155e8",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x6631c61c99f651ecf0d39bc7fd70a4885775b580b82f36a9b1dc9f08a293ca95",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0x14c2afaf3ec77744d69f452c249d7906f8a44d5df7489d1e59e9e7d6e91b11c6",
      "kind": "transparent"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0xd42fc510c15654bd556a94e34f04e51451aee741a68e8e8ffa621345bd16a66c",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x61d7b7a856fa0cf4b8ee2f2b40cc87ba4d5ed49d016bbe8403093aae828c337d",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x217669950ce464a06e0076ffc356d08eb2480ad7c3b2deca5c5d55e54783adae",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xdfa44094eeb5dc934823e54f027740cdb9c22313c9d55e5668ea3211ad3bd2dc",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x183fa06b17ae7106db37513b5497df5d425698acbd98e9bdca828418a4e3d315",
      "kind": "transparent"
    }
  ],
  "impls": {
    "db0b04f4d1d3a47028794a1782f96ae8c9d13319d202a648994c0995c22a4b0e": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x75f082712df090d58c0a104ce58bc9f6b5e655a6ebf9fbe77f0c57de4fb66e2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "frakToken",
            "type": "t_contract(IERC20Upgradeable)335",
            "src": "contracts/FeeSharingSystem.sol:23"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "currentRewardPerBlock",
            "type": "t_uint256",
            "src": "contracts/FeeSharingSystem.sol:26"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "lastRewardAdjustment",
            "type": "t_uint256",
            "src": "contracts/FeeSharingSystem.sol:29"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "lastUpdateBlock",
            "type": "t_uint256",
            "src": "contracts/FeeSharingSystem.sol:32"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "periodEndBlock",
            "type": "t_uint256",
            "src": "contracts/FeeSharingSystem.sol:35"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "rewardPerTokenStored",
            "type": "t_uint256",
            "src": "contracts/FeeSharingSystem.sol:38"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "totalShares",
            "type": "t_uint256",
            "src": "contracts/FeeSharingSystem.sol:41"
          },
          {
            "contract": "FeeSharingSystem",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_struct(UserInfo)876_storage)",
            "src": "contracts/FeeSharingSystem.sol:43"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)335": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserInfo)876_storage)": {
            "label": "mapping(address => struct FeeSharingSystem.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)876_storage": {
            "label": "struct FeeSharingSystem.UserInfo",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256"
              },
              {
                "label": "userRewardPerTokenPaid",
                "type": "t_uint256"
              },
              {
                "label": "rewards",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3f49dc5b32ec07658e7b872a80a69acfff34f8bd7ad35514235a022d5a23ce21": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xc46b61b640a7458266417c36983afc675b5f92094dc2ce4eb85f4b97776b1526",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "contract": "FraktalFactory",
            "label": "Fraktalimplementation",
            "type": "t_address",
            "src": "contracts/FraktalFactory.sol:16"
          },
          {
            "contract": "FraktalFactory",
            "label": "revenueChannelImplementation",
            "type": "t_address",
            "src": "contracts/FraktalFactory.sol:17"
          },
          {
            "contract": "FraktalFactory",
            "label": "fraktalNFTs",
            "type": "t_struct(UintToAddressMap)9036_storage",
            "src": "contracts/FraktalFactory.sol:18"
          },
          {
            "contract": "FraktalFactory",
            "label": "lockedERC721s",
            "type": "t_mapping(t_address,t_struct(ERC721Imported)11682_storage)",
            "src": "contracts/FraktalFactory.sol:27"
          },
          {
            "contract": "FraktalFactory",
            "label": "lockedERC1155s",
            "type": "t_mapping(t_address,t_struct(ERC1155Imported)11687_storage)",
            "src": "contracts/FraktalFactory.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(UintToAddressMap)9036_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)8806_storage"
              }
            ]
          },
          "t_struct(Map)8806_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)9475_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)9475_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9281_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Set)9281_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(ERC721Imported)11682_storage)": {
            "label": "mapping(address => struct FraktalFactory.ERC721Imported)"
          },
          "t_struct(ERC721Imported)11682_storage": {
            "label": "struct FraktalFactory.ERC721Imported",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenIndex",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(ERC1155Imported)11687_storage)": {
            "label": "mapping(address => struct FraktalFactory.ERC1155Imported)"
          },
          "t_struct(ERC1155Imported)11687_storage": {
            "label": "struct FraktalFactory.ERC1155Imported",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenIndex",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "abe9120fa0973fadff716b609fc7acce1b5246ec6eb2c891e75754def44472ad": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xcb46515754f9c4b7b7fc27c6cf5e2c8b9372205536e3352790d5acee89b4a3b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "FraktalMarket",
            "label": "fee",
            "type": "t_uint16",
            "src": "contracts/FraktalMarket.sol:20"
          },
          {
            "contract": "FraktalMarket",
            "label": "listingFee",
            "type": "t_uint256",
            "src": "contracts/FraktalMarket.sol:21"
          },
          {
            "contract": "FraktalMarket",
            "label": "feesAccrued",
            "type": "t_uint256",
            "src": "contracts/FraktalMarket.sol:22"
          },
          {
            "contract": "FraktalMarket",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Listing)12476_storage))",
            "src": "contracts/FraktalMarket.sol:40"
          },
          {
            "contract": "FraktalMarket",
            "label": "auctionListings",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(AuctionListing)12487_storage)))",
            "src": "contracts/FraktalMarket.sol:42"
          },
          {
            "contract": "FraktalMarket",
            "label": "auctionNonce",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/FraktalMarket.sol:43"
          },
          {
            "contract": "FraktalMarket",
            "label": "auctionReserve",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/FraktalMarket.sol:44"
          },
          {
            "contract": "FraktalMarket",
            "label": "auctionSellerRedeemed",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/FraktalMarket.sol:45"
          },
          {
            "contract": "FraktalMarket",
            "label": "participantContribution",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "contracts/FraktalMarket.sol:47"
          },
          {
            "contract": "FraktalMarket",
            "label": "offers",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Proposal)12467_storage))",
            "src": "contracts/FraktalMarket.sol:49"
          },
          {
            "contract": "FraktalMarket",
            "label": "sellersBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/FraktalMarket.sol:50"
          },
          {
            "contract": "FraktalMarket",
            "label": "maxPriceRegistered",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/FraktalMarket.sol:51"
          }
        ],
        "types": {
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Listing)12476_storage))": {
            "label": "mapping(address => mapping(address => struct FraktalMarket.Listing))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Listing)12476_storage)": {
            "label": "mapping(address => struct FraktalMarket.Listing)"
          },
          "t_struct(Listing)12476_storage": {
            "label": "struct FraktalMarket.Listing",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "numberOfShares",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_struct(AuctionListing)12487_storage)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => struct FraktalMarket.AuctionListing)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(AuctionListing)12487_storage))": {
            "label": "mapping(address => mapping(uint256 => struct FraktalMarket.AuctionListing))"
          },
          "t_mapping(t_uint256,t_struct(AuctionListing)12487_storage)": {
            "label": "mapping(uint256 => struct FraktalMarket.AuctionListing)"
          },
          "t_struct(AuctionListing)12487_storage": {
            "label": "struct FraktalMarket.AuctionListing",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256"
              },
              {
                "label": "numberOfShares",
                "type": "t_uint256"
              },
              {
                "label": "auctionEndTime",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Proposal)12467_storage))": {
            "label": "mapping(address => mapping(address => struct FraktalMarket.Proposal))"
          },
          "t_mapping(t_address,t_struct(Proposal)12467_storage)": {
            "label": "mapping(address => struct FraktalMarket.Proposal)"
          },
          "t_struct(Proposal)12467_storage": {
            "label": "struct FraktalMarket.Proposal",
            "members": [
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "winner",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abdf92094f4a56d809602c12d966bdd9772000aa77850a54a4cf725f5149f4e1": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x6e6ec85a0cc0992f59e9829cf1c07ad3b2cce35d2a7c91b744771a3d5c867b54",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:40"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:35"
          },
          {
            "contract": "FraktalFactoryV2",
            "label": "Fraktalimplementation",
            "type": "t_address",
            "src": "contracts/FraktalFactoryV2.sol:16"
          },
          {
            "contract": "FraktalFactoryV2",
            "label": "revenueChannelImplementation",
            "type": "t_address",
            "src": "contracts/FraktalFactoryV2.sol:17"
          },
          {
            "contract": "FraktalFactoryV2",
            "label": "fraktalNFTs",
            "type": "t_struct(UintToAddressMap)9036_storage",
            "src": "contracts/FraktalFactoryV2.sol:18"
          },
          {
            "contract": "FraktalFactoryV2",
            "label": "lockedERC721s",
            "type": "t_mapping(t_address,t_struct(ERC721Imported)12473_storage)",
            "src": "contracts/FraktalFactoryV2.sol:27"
          },
          {
            "contract": "FraktalFactoryV2",
            "label": "lockedERC1155s",
            "type": "t_mapping(t_address,t_struct(ERC1155Imported)12478_storage)",
            "src": "contracts/FraktalFactoryV2.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(UintToAddressMap)9036_storage": {
            "label": "struct EnumerableMap.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)8806_storage"
              }
            ]
          },
          "t_struct(Map)8806_storage": {
            "label": "struct EnumerableMap.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)9475_storage"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)"
              }
            ]
          },
          "t_struct(Bytes32Set)9475_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9281_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Set)9281_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(ERC721Imported)12473_storage)": {
            "label": "mapping(address => struct FraktalFactoryV2.ERC721Imported)"
          },
          "t_struct(ERC721Imported)12473_storage": {
            "label": "struct FraktalFactoryV2.ERC721Imported",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenIndex",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(ERC1155Imported)12478_storage)": {
            "label": "mapping(address => struct FraktalFactoryV2.ERC1155Imported)"
          },
          "t_struct(ERC1155Imported)12478_storage": {
            "label": "struct FraktalFactoryV2.ERC1155Imported",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenIndex",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
